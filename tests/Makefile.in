# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
CC = @CC@
CFLAGS = @CFLAGS@
LDFLAGS = @LDFLAGS@
MAKEINFO = @MAKEINFO@
MISCFLAGS = @MISCFLAGS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@

check_PROGRAMS = reuse tabs tadd tagm tcan_round tcmp tcmp2 tcmp_ui tdiv tdiv_ui tdump teq texp tget_str tlog tlog2 tmul tmul_2exp tmul_ui tout_str tpi tpow trandom tround tset_d tset_f tset_q tset_si tset_str tset_z tsqrt tsqrt_ui tui_div tui_sub tsin_cos tswap ttrunc tisnan tget_d tatan tcosh tsinh ttanh tacosh tasinh tatanh thyperbolic texp2 tfactorial tsub tasin

LDADD = $(top_builddir)/libmpfr.a  @LDADD@
INCLUDES = @INCLUDES@ -I$(top_srcdir)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = 

DEFS = @DEFS@ -I. -I$(srcdir) 
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
reuse_SOURCES = reuse.c
reuse_OBJECTS =  reuse.o
reuse_LDADD = $(LDADD)
reuse_DEPENDENCIES =  $(top_builddir)/libmpfr.a
reuse_LDFLAGS = 
tabs_SOURCES = tabs.c
tabs_OBJECTS =  tabs.o
tabs_LDADD = $(LDADD)
tabs_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tabs_LDFLAGS = 
tadd_SOURCES = tadd.c
tadd_OBJECTS =  tadd.o
tadd_LDADD = $(LDADD)
tadd_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tadd_LDFLAGS = 
tagm_SOURCES = tagm.c
tagm_OBJECTS =  tagm.o
tagm_LDADD = $(LDADD)
tagm_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tagm_LDFLAGS = 
tcan_round_SOURCES = tcan_round.c
tcan_round_OBJECTS =  tcan_round.o
tcan_round_LDADD = $(LDADD)
tcan_round_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tcan_round_LDFLAGS = 
tcmp_SOURCES = tcmp.c
tcmp_OBJECTS =  tcmp.o
tcmp_LDADD = $(LDADD)
tcmp_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tcmp_LDFLAGS = 
tcmp2_SOURCES = tcmp2.c
tcmp2_OBJECTS =  tcmp2.o
tcmp2_LDADD = $(LDADD)
tcmp2_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tcmp2_LDFLAGS = 
tcmp_ui_SOURCES = tcmp_ui.c
tcmp_ui_OBJECTS =  tcmp_ui.o
tcmp_ui_LDADD = $(LDADD)
tcmp_ui_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tcmp_ui_LDFLAGS = 
tdiv_SOURCES = tdiv.c
tdiv_OBJECTS =  tdiv.o
tdiv_LDADD = $(LDADD)
tdiv_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tdiv_LDFLAGS = 
tdiv_ui_SOURCES = tdiv_ui.c
tdiv_ui_OBJECTS =  tdiv_ui.o
tdiv_ui_LDADD = $(LDADD)
tdiv_ui_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tdiv_ui_LDFLAGS = 
tdump_SOURCES = tdump.c
tdump_OBJECTS =  tdump.o
tdump_LDADD = $(LDADD)
tdump_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tdump_LDFLAGS = 
teq_SOURCES = teq.c
teq_OBJECTS =  teq.o
teq_LDADD = $(LDADD)
teq_DEPENDENCIES =  $(top_builddir)/libmpfr.a
teq_LDFLAGS = 
texp_SOURCES = texp.c
texp_OBJECTS =  texp.o
texp_LDADD = $(LDADD)
texp_DEPENDENCIES =  $(top_builddir)/libmpfr.a
texp_LDFLAGS = 
tget_str_SOURCES = tget_str.c
tget_str_OBJECTS =  tget_str.o
tget_str_LDADD = $(LDADD)
tget_str_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tget_str_LDFLAGS = 
tlog_SOURCES = tlog.c
tlog_OBJECTS =  tlog.o
tlog_LDADD = $(LDADD)
tlog_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tlog_LDFLAGS = 
tlog2_SOURCES = tlog2.c
tlog2_OBJECTS =  tlog2.o
tlog2_LDADD = $(LDADD)
tlog2_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tlog2_LDFLAGS = 
tmul_SOURCES = tmul.c
tmul_OBJECTS =  tmul.o
tmul_LDADD = $(LDADD)
tmul_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tmul_LDFLAGS = 
tmul_2exp_SOURCES = tmul_2exp.c
tmul_2exp_OBJECTS =  tmul_2exp.o
tmul_2exp_LDADD = $(LDADD)
tmul_2exp_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tmul_2exp_LDFLAGS = 
tmul_ui_SOURCES = tmul_ui.c
tmul_ui_OBJECTS =  tmul_ui.o
tmul_ui_LDADD = $(LDADD)
tmul_ui_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tmul_ui_LDFLAGS = 
tout_str_SOURCES = tout_str.c
tout_str_OBJECTS =  tout_str.o
tout_str_LDADD = $(LDADD)
tout_str_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tout_str_LDFLAGS = 
tpi_SOURCES = tpi.c
tpi_OBJECTS =  tpi.o
tpi_LDADD = $(LDADD)
tpi_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tpi_LDFLAGS = 
tpow_SOURCES = tpow.c
tpow_OBJECTS =  tpow.o
tpow_LDADD = $(LDADD)
tpow_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tpow_LDFLAGS = 
trandom_SOURCES = trandom.c
trandom_OBJECTS =  trandom.o
trandom_LDADD = $(LDADD)
trandom_DEPENDENCIES =  $(top_builddir)/libmpfr.a
trandom_LDFLAGS = 
tround_SOURCES = tround.c
tround_OBJECTS =  tround.o
tround_LDADD = $(LDADD)
tround_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tround_LDFLAGS = 
tset_d_SOURCES = tset_d.c
tset_d_OBJECTS =  tset_d.o
tset_d_LDADD = $(LDADD)
tset_d_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_d_LDFLAGS = 
tset_f_SOURCES = tset_f.c
tset_f_OBJECTS =  tset_f.o
tset_f_LDADD = $(LDADD)
tset_f_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_f_LDFLAGS = 
tset_q_SOURCES = tset_q.c
tset_q_OBJECTS =  tset_q.o
tset_q_LDADD = $(LDADD)
tset_q_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_q_LDFLAGS = 
tset_si_SOURCES = tset_si.c
tset_si_OBJECTS =  tset_si.o
tset_si_LDADD = $(LDADD)
tset_si_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_si_LDFLAGS = 
tset_str_SOURCES = tset_str.c
tset_str_OBJECTS =  tset_str.o
tset_str_LDADD = $(LDADD)
tset_str_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_str_LDFLAGS = 
tset_z_SOURCES = tset_z.c
tset_z_OBJECTS =  tset_z.o
tset_z_LDADD = $(LDADD)
tset_z_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tset_z_LDFLAGS = 
tsqrt_SOURCES = tsqrt.c
tsqrt_OBJECTS =  tsqrt.o
tsqrt_LDADD = $(LDADD)
tsqrt_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tsqrt_LDFLAGS = 
tsqrt_ui_SOURCES = tsqrt_ui.c
tsqrt_ui_OBJECTS =  tsqrt_ui.o
tsqrt_ui_LDADD = $(LDADD)
tsqrt_ui_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tsqrt_ui_LDFLAGS = 
tui_div_SOURCES = tui_div.c
tui_div_OBJECTS =  tui_div.o
tui_div_LDADD = $(LDADD)
tui_div_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tui_div_LDFLAGS = 
tui_sub_SOURCES = tui_sub.c
tui_sub_OBJECTS =  tui_sub.o
tui_sub_LDADD = $(LDADD)
tui_sub_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tui_sub_LDFLAGS = 
tsin_cos_SOURCES = tsin_cos.c
tsin_cos_OBJECTS =  tsin_cos.o
tsin_cos_LDADD = $(LDADD)
tsin_cos_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tsin_cos_LDFLAGS = 
tswap_SOURCES = tswap.c
tswap_OBJECTS =  tswap.o
tswap_LDADD = $(LDADD)
tswap_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tswap_LDFLAGS = 
ttrunc_SOURCES = ttrunc.c
ttrunc_OBJECTS =  ttrunc.o
ttrunc_LDADD = $(LDADD)
ttrunc_DEPENDENCIES =  $(top_builddir)/libmpfr.a
ttrunc_LDFLAGS = 
tisnan_SOURCES = tisnan.c
tisnan_OBJECTS =  tisnan.o
tisnan_LDADD = $(LDADD)
tisnan_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tisnan_LDFLAGS = 
tget_d_SOURCES = tget_d.c
tget_d_OBJECTS =  tget_d.o
tget_d_LDADD = $(LDADD)
tget_d_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tget_d_LDFLAGS = 
tatan_SOURCES = tatan.c
tatan_OBJECTS =  tatan.o
tatan_LDADD = $(LDADD)
tatan_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tatan_LDFLAGS = 
tcosh_SOURCES = tcosh.c
tcosh_OBJECTS =  tcosh.o
tcosh_LDADD = $(LDADD)
tcosh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tcosh_LDFLAGS = 
tsinh_SOURCES = tsinh.c
tsinh_OBJECTS =  tsinh.o
tsinh_LDADD = $(LDADD)
tsinh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tsinh_LDFLAGS = 
ttanh_SOURCES = ttanh.c
ttanh_OBJECTS =  ttanh.o
ttanh_LDADD = $(LDADD)
ttanh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
ttanh_LDFLAGS = 
tacosh_SOURCES = tacosh.c
tacosh_OBJECTS =  tacosh.o
tacosh_LDADD = $(LDADD)
tacosh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tacosh_LDFLAGS = 
tasinh_SOURCES = tasinh.c
tasinh_OBJECTS =  tasinh.o
tasinh_LDADD = $(LDADD)
tasinh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tasinh_LDFLAGS = 
tatanh_SOURCES = tatanh.c
tatanh_OBJECTS =  tatanh.o
tatanh_LDADD = $(LDADD)
tatanh_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tatanh_LDFLAGS = 
thyperbolic_SOURCES = thyperbolic.c
thyperbolic_OBJECTS =  thyperbolic.o
thyperbolic_LDADD = $(LDADD)
thyperbolic_DEPENDENCIES =  $(top_builddir)/libmpfr.a
thyperbolic_LDFLAGS = 
texp2_SOURCES = texp2.c
texp2_OBJECTS =  texp2.o
texp2_LDADD = $(LDADD)
texp2_DEPENDENCIES =  $(top_builddir)/libmpfr.a
texp2_LDFLAGS = 
tfactorial_SOURCES = tfactorial.c
tfactorial_OBJECTS =  tfactorial.o
tfactorial_LDADD = $(LDADD)
tfactorial_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tfactorial_LDFLAGS = 
tsub_SOURCES = tsub.c
tsub_OBJECTS =  tsub.o
tsub_LDADD = $(LDADD)
tsub_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tsub_LDFLAGS = 
tasin_SOURCES = tasin.c
tasin_OBJECTS =  tasin.o
tasin_LDADD = $(LDADD)
tasin_DEPENDENCIES =  $(top_builddir)/libmpfr.a
tasin_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/reuse.P .deps/tabs.P .deps/tacosh.P .deps/tadd.P \
.deps/tagm.P .deps/tasin.P .deps/tasinh.P .deps/tatan.P .deps/tatanh.P \
.deps/tcan_round.P .deps/tcmp.P .deps/tcmp2.P .deps/tcmp_ui.P \
.deps/tcosh.P .deps/tdiv.P .deps/tdiv_ui.P .deps/tdump.P .deps/teq.P \
.deps/texp.P .deps/texp2.P .deps/tfactorial.P .deps/tget_d.P \
.deps/tget_str.P .deps/thyperbolic.P .deps/tisnan.P .deps/tlog.P \
.deps/tlog2.P .deps/tmul.P .deps/tmul_2exp.P .deps/tmul_ui.P \
.deps/tout_str.P .deps/tpi.P .deps/tpow.P .deps/trandom.P \
.deps/tround.P .deps/tset_d.P .deps/tset_f.P .deps/tset_q.P \
.deps/tset_si.P .deps/tset_str.P .deps/tset_z.P .deps/tsin_cos.P \
.deps/tsinh.P .deps/tsqrt.P .deps/tsqrt_ui.P .deps/tsub.P .deps/tswap.P \
.deps/ttanh.P .deps/ttrunc.P .deps/tui_div.P .deps/tui_sub.P
SOURCES = reuse.c tabs.c tadd.c tagm.c tcan_round.c tcmp.c tcmp2.c tcmp_ui.c tdiv.c tdiv_ui.c tdump.c teq.c texp.c tget_str.c tlog.c tlog2.c tmul.c tmul_2exp.c tmul_ui.c tout_str.c tpi.c tpow.c trandom.c tround.c tset_d.c tset_f.c tset_q.c tset_si.c tset_str.c tset_z.c tsqrt.c tsqrt_ui.c tui_div.c tui_sub.c tsin_cos.c tswap.c ttrunc.c tisnan.c tget_d.c tatan.c tcosh.c tsinh.c ttanh.c tacosh.c tasinh.c tatanh.c thyperbolic.c texp2.c tfactorial.c tsub.c tasin.c
OBJECTS = reuse.o tabs.o tadd.o tagm.o tcan_round.o tcmp.o tcmp2.o tcmp_ui.o tdiv.o tdiv_ui.o tdump.o teq.o texp.o tget_str.o tlog.o tlog2.o tmul.o tmul_2exp.o tmul_ui.o tout_str.o tpi.o tpow.o trandom.o tround.o tset_d.o tset_f.o tset_q.o tset_si.o tset_str.o tset_z.o tsqrt.o tsqrt_ui.o tui_div.o tui_sub.o tsin_cos.o tswap.o ttrunc.o tisnan.o tget_d.o tatan.o tcosh.o tsinh.o ttanh.o tacosh.o tasinh.o tatanh.o thyperbolic.o texp2.o tfactorial.o tsub.o tasin.o

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .o .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-checkPROGRAMS:

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)

distclean-checkPROGRAMS:

maintainer-clean-checkPROGRAMS:

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

reuse: $(reuse_OBJECTS) $(reuse_DEPENDENCIES)
	@rm -f reuse
	$(LINK) $(reuse_LDFLAGS) $(reuse_OBJECTS) $(reuse_LDADD) $(LIBS)

tabs: $(tabs_OBJECTS) $(tabs_DEPENDENCIES)
	@rm -f tabs
	$(LINK) $(tabs_LDFLAGS) $(tabs_OBJECTS) $(tabs_LDADD) $(LIBS)

tadd: $(tadd_OBJECTS) $(tadd_DEPENDENCIES)
	@rm -f tadd
	$(LINK) $(tadd_LDFLAGS) $(tadd_OBJECTS) $(tadd_LDADD) $(LIBS)

tagm: $(tagm_OBJECTS) $(tagm_DEPENDENCIES)
	@rm -f tagm
	$(LINK) $(tagm_LDFLAGS) $(tagm_OBJECTS) $(tagm_LDADD) $(LIBS)

tcan_round: $(tcan_round_OBJECTS) $(tcan_round_DEPENDENCIES)
	@rm -f tcan_round
	$(LINK) $(tcan_round_LDFLAGS) $(tcan_round_OBJECTS) $(tcan_round_LDADD) $(LIBS)

tcmp: $(tcmp_OBJECTS) $(tcmp_DEPENDENCIES)
	@rm -f tcmp
	$(LINK) $(tcmp_LDFLAGS) $(tcmp_OBJECTS) $(tcmp_LDADD) $(LIBS)

tcmp2: $(tcmp2_OBJECTS) $(tcmp2_DEPENDENCIES)
	@rm -f tcmp2
	$(LINK) $(tcmp2_LDFLAGS) $(tcmp2_OBJECTS) $(tcmp2_LDADD) $(LIBS)

tcmp_ui: $(tcmp_ui_OBJECTS) $(tcmp_ui_DEPENDENCIES)
	@rm -f tcmp_ui
	$(LINK) $(tcmp_ui_LDFLAGS) $(tcmp_ui_OBJECTS) $(tcmp_ui_LDADD) $(LIBS)

tdiv: $(tdiv_OBJECTS) $(tdiv_DEPENDENCIES)
	@rm -f tdiv
	$(LINK) $(tdiv_LDFLAGS) $(tdiv_OBJECTS) $(tdiv_LDADD) $(LIBS)

tdiv_ui: $(tdiv_ui_OBJECTS) $(tdiv_ui_DEPENDENCIES)
	@rm -f tdiv_ui
	$(LINK) $(tdiv_ui_LDFLAGS) $(tdiv_ui_OBJECTS) $(tdiv_ui_LDADD) $(LIBS)

tdump: $(tdump_OBJECTS) $(tdump_DEPENDENCIES)
	@rm -f tdump
	$(LINK) $(tdump_LDFLAGS) $(tdump_OBJECTS) $(tdump_LDADD) $(LIBS)

teq: $(teq_OBJECTS) $(teq_DEPENDENCIES)
	@rm -f teq
	$(LINK) $(teq_LDFLAGS) $(teq_OBJECTS) $(teq_LDADD) $(LIBS)

texp: $(texp_OBJECTS) $(texp_DEPENDENCIES)
	@rm -f texp
	$(LINK) $(texp_LDFLAGS) $(texp_OBJECTS) $(texp_LDADD) $(LIBS)

tget_str: $(tget_str_OBJECTS) $(tget_str_DEPENDENCIES)
	@rm -f tget_str
	$(LINK) $(tget_str_LDFLAGS) $(tget_str_OBJECTS) $(tget_str_LDADD) $(LIBS)

tlog: $(tlog_OBJECTS) $(tlog_DEPENDENCIES)
	@rm -f tlog
	$(LINK) $(tlog_LDFLAGS) $(tlog_OBJECTS) $(tlog_LDADD) $(LIBS)

tlog2: $(tlog2_OBJECTS) $(tlog2_DEPENDENCIES)
	@rm -f tlog2
	$(LINK) $(tlog2_LDFLAGS) $(tlog2_OBJECTS) $(tlog2_LDADD) $(LIBS)

tmul: $(tmul_OBJECTS) $(tmul_DEPENDENCIES)
	@rm -f tmul
	$(LINK) $(tmul_LDFLAGS) $(tmul_OBJECTS) $(tmul_LDADD) $(LIBS)

tmul_2exp: $(tmul_2exp_OBJECTS) $(tmul_2exp_DEPENDENCIES)
	@rm -f tmul_2exp
	$(LINK) $(tmul_2exp_LDFLAGS) $(tmul_2exp_OBJECTS) $(tmul_2exp_LDADD) $(LIBS)

tmul_ui: $(tmul_ui_OBJECTS) $(tmul_ui_DEPENDENCIES)
	@rm -f tmul_ui
	$(LINK) $(tmul_ui_LDFLAGS) $(tmul_ui_OBJECTS) $(tmul_ui_LDADD) $(LIBS)

tout_str: $(tout_str_OBJECTS) $(tout_str_DEPENDENCIES)
	@rm -f tout_str
	$(LINK) $(tout_str_LDFLAGS) $(tout_str_OBJECTS) $(tout_str_LDADD) $(LIBS)

tpi: $(tpi_OBJECTS) $(tpi_DEPENDENCIES)
	@rm -f tpi
	$(LINK) $(tpi_LDFLAGS) $(tpi_OBJECTS) $(tpi_LDADD) $(LIBS)

tpow: $(tpow_OBJECTS) $(tpow_DEPENDENCIES)
	@rm -f tpow
	$(LINK) $(tpow_LDFLAGS) $(tpow_OBJECTS) $(tpow_LDADD) $(LIBS)

trandom: $(trandom_OBJECTS) $(trandom_DEPENDENCIES)
	@rm -f trandom
	$(LINK) $(trandom_LDFLAGS) $(trandom_OBJECTS) $(trandom_LDADD) $(LIBS)

tround: $(tround_OBJECTS) $(tround_DEPENDENCIES)
	@rm -f tround
	$(LINK) $(tround_LDFLAGS) $(tround_OBJECTS) $(tround_LDADD) $(LIBS)

tset_d: $(tset_d_OBJECTS) $(tset_d_DEPENDENCIES)
	@rm -f tset_d
	$(LINK) $(tset_d_LDFLAGS) $(tset_d_OBJECTS) $(tset_d_LDADD) $(LIBS)

tset_f: $(tset_f_OBJECTS) $(tset_f_DEPENDENCIES)
	@rm -f tset_f
	$(LINK) $(tset_f_LDFLAGS) $(tset_f_OBJECTS) $(tset_f_LDADD) $(LIBS)

tset_q: $(tset_q_OBJECTS) $(tset_q_DEPENDENCIES)
	@rm -f tset_q
	$(LINK) $(tset_q_LDFLAGS) $(tset_q_OBJECTS) $(tset_q_LDADD) $(LIBS)

tset_si: $(tset_si_OBJECTS) $(tset_si_DEPENDENCIES)
	@rm -f tset_si
	$(LINK) $(tset_si_LDFLAGS) $(tset_si_OBJECTS) $(tset_si_LDADD) $(LIBS)

tset_str: $(tset_str_OBJECTS) $(tset_str_DEPENDENCIES)
	@rm -f tset_str
	$(LINK) $(tset_str_LDFLAGS) $(tset_str_OBJECTS) $(tset_str_LDADD) $(LIBS)

tset_z: $(tset_z_OBJECTS) $(tset_z_DEPENDENCIES)
	@rm -f tset_z
	$(LINK) $(tset_z_LDFLAGS) $(tset_z_OBJECTS) $(tset_z_LDADD) $(LIBS)

tsqrt: $(tsqrt_OBJECTS) $(tsqrt_DEPENDENCIES)
	@rm -f tsqrt
	$(LINK) $(tsqrt_LDFLAGS) $(tsqrt_OBJECTS) $(tsqrt_LDADD) $(LIBS)

tsqrt_ui: $(tsqrt_ui_OBJECTS) $(tsqrt_ui_DEPENDENCIES)
	@rm -f tsqrt_ui
	$(LINK) $(tsqrt_ui_LDFLAGS) $(tsqrt_ui_OBJECTS) $(tsqrt_ui_LDADD) $(LIBS)

tui_div: $(tui_div_OBJECTS) $(tui_div_DEPENDENCIES)
	@rm -f tui_div
	$(LINK) $(tui_div_LDFLAGS) $(tui_div_OBJECTS) $(tui_div_LDADD) $(LIBS)

tui_sub: $(tui_sub_OBJECTS) $(tui_sub_DEPENDENCIES)
	@rm -f tui_sub
	$(LINK) $(tui_sub_LDFLAGS) $(tui_sub_OBJECTS) $(tui_sub_LDADD) $(LIBS)

tsin_cos: $(tsin_cos_OBJECTS) $(tsin_cos_DEPENDENCIES)
	@rm -f tsin_cos
	$(LINK) $(tsin_cos_LDFLAGS) $(tsin_cos_OBJECTS) $(tsin_cos_LDADD) $(LIBS)

tswap: $(tswap_OBJECTS) $(tswap_DEPENDENCIES)
	@rm -f tswap
	$(LINK) $(tswap_LDFLAGS) $(tswap_OBJECTS) $(tswap_LDADD) $(LIBS)

ttrunc: $(ttrunc_OBJECTS) $(ttrunc_DEPENDENCIES)
	@rm -f ttrunc
	$(LINK) $(ttrunc_LDFLAGS) $(ttrunc_OBJECTS) $(ttrunc_LDADD) $(LIBS)

tisnan: $(tisnan_OBJECTS) $(tisnan_DEPENDENCIES)
	@rm -f tisnan
	$(LINK) $(tisnan_LDFLAGS) $(tisnan_OBJECTS) $(tisnan_LDADD) $(LIBS)

tget_d: $(tget_d_OBJECTS) $(tget_d_DEPENDENCIES)
	@rm -f tget_d
	$(LINK) $(tget_d_LDFLAGS) $(tget_d_OBJECTS) $(tget_d_LDADD) $(LIBS)

tatan: $(tatan_OBJECTS) $(tatan_DEPENDENCIES)
	@rm -f tatan
	$(LINK) $(tatan_LDFLAGS) $(tatan_OBJECTS) $(tatan_LDADD) $(LIBS)

tcosh: $(tcosh_OBJECTS) $(tcosh_DEPENDENCIES)
	@rm -f tcosh
	$(LINK) $(tcosh_LDFLAGS) $(tcosh_OBJECTS) $(tcosh_LDADD) $(LIBS)

tsinh: $(tsinh_OBJECTS) $(tsinh_DEPENDENCIES)
	@rm -f tsinh
	$(LINK) $(tsinh_LDFLAGS) $(tsinh_OBJECTS) $(tsinh_LDADD) $(LIBS)

ttanh: $(ttanh_OBJECTS) $(ttanh_DEPENDENCIES)
	@rm -f ttanh
	$(LINK) $(ttanh_LDFLAGS) $(ttanh_OBJECTS) $(ttanh_LDADD) $(LIBS)

tacosh: $(tacosh_OBJECTS) $(tacosh_DEPENDENCIES)
	@rm -f tacosh
	$(LINK) $(tacosh_LDFLAGS) $(tacosh_OBJECTS) $(tacosh_LDADD) $(LIBS)

tasinh: $(tasinh_OBJECTS) $(tasinh_DEPENDENCIES)
	@rm -f tasinh
	$(LINK) $(tasinh_LDFLAGS) $(tasinh_OBJECTS) $(tasinh_LDADD) $(LIBS)

tatanh: $(tatanh_OBJECTS) $(tatanh_DEPENDENCIES)
	@rm -f tatanh
	$(LINK) $(tatanh_LDFLAGS) $(tatanh_OBJECTS) $(tatanh_LDADD) $(LIBS)

thyperbolic: $(thyperbolic_OBJECTS) $(thyperbolic_DEPENDENCIES)
	@rm -f thyperbolic
	$(LINK) $(thyperbolic_LDFLAGS) $(thyperbolic_OBJECTS) $(thyperbolic_LDADD) $(LIBS)

texp2: $(texp2_OBJECTS) $(texp2_DEPENDENCIES)
	@rm -f texp2
	$(LINK) $(texp2_LDFLAGS) $(texp2_OBJECTS) $(texp2_LDADD) $(LIBS)

tfactorial: $(tfactorial_OBJECTS) $(tfactorial_DEPENDENCIES)
	@rm -f tfactorial
	$(LINK) $(tfactorial_LDFLAGS) $(tfactorial_OBJECTS) $(tfactorial_LDADD) $(LIBS)

tsub: $(tsub_OBJECTS) $(tsub_DEPENDENCIES)
	@rm -f tsub
	$(LINK) $(tsub_LDFLAGS) $(tsub_OBJECTS) $(tsub_LDADD) $(LIBS)

tasin: $(tasin_OBJECTS) $(tasin_DEPENDENCIES)
	@rm -f tasin
	$(LINK) $(tasin_LDFLAGS) $(tasin_OBJECTS) $(tasin_LDADD) $(LIBS)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = tests

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu tests/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-checkPROGRAMS mostlyclean-compile \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-checkPROGRAMS clean-compile clean-tags clean-depend \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-checkPROGRAMS distclean-compile distclean-tags \
		distclean-depend distclean-generic clean-am

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-checkPROGRAMS \
		maintainer-clean-compile maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-checkPROGRAMS distclean-checkPROGRAMS \
clean-checkPROGRAMS maintainer-clean-checkPROGRAMS mostlyclean-compile \
distclean-compile clean-compile maintainer-clean-compile tags \
mostlyclean-tags distclean-tags clean-tags maintainer-clean-tags \
distdir mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


../libmpfr.a:
	cd $(top_srcdir); make libmpfr.a  

check: 	all
	for i in $(check_PROGRAMS); do echo Testing $$i ; ./$$i || echo "### $$i failed ###"; done

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
