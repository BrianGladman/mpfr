Configuration:

- use autoconf [GH]

Compatibility with MPF:

- write a mpfr2mpfr.h header file with macros for compatibility with MPF, for
  example #define mpf_add(x,y,z) mpfr_add(x,y,z,GMP_RNDN) [GH]

- implement missing functions for complete compatibility with MPF:
mpfr_abs
mpfr_add_ui
mpfr_ceil
mpfr_dump
mpfr_eq
mpfr_floor
mpfr_inp_str
mpfr_random2
mpfr_reldiff
mpfr_set_prec_raw
mpfr_size
mpfr_sqrt_ui
mpfr_trunc
mpfr_ui_div
mpfr_ui_sub
mpfr_urandomb
mpfr_sgn

Changes in existing functions:

- improve mpfr_exp, currently in O(sqrt(n)*M(n)), to use algorithms in
  O(n^(1/3)*M(n)) or even O(M(n)*log(n)) [PZ]

New functions to implement:

- mpfr_sin, mpfr_cos

- mpfr_mul_mpz, mpfr_div_mpz

Miscellaneous:

- implement a C++ wrapper [see with Torbjo"rn and/or Fabrice]

- deal correctly with all special values (zero, infinities, NaN)

- for all instructions that call malloc/realloc/etc, handle error cases
  (for example return an int indicating if an error occurred)

- in all functions that do rounding, return an int indicating if the result
  is exact (i.e. no bit was lost) or not (like in mpfr_div_ui)

